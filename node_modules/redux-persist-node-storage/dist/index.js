"use strict";
var node_localstorage_1 = require('node-localstorage');
var AsyncNodeStorage = (function () {
    function AsyncNodeStorage(storageDirectory) {
        this.localStorage = new node_localstorage_1.LocalStorage(storageDirectory);
    }
    AsyncNodeStorage.prototype.getItem = function (key, cb) {
        try {
            var storedValue_1 = this.localStorage.getItem(key);
            process.nextTick(function () { return cb(null, storedValue_1); });
        }
        catch (e) {
            cb(e);
        }
    };
    AsyncNodeStorage.prototype.setItem = function (key, value, cb) {
        try {
            this.localStorage.setItem(key, value);
            process.nextTick(function () { return cb(null); });
        }
        catch (e) {
            cb(e);
        }
    };
    AsyncNodeStorage.prototype.removeItem = function (key, cb) {
        try {
            this.localStorage.removeItem(key);
            process.nextTick(function () { return cb(null); });
        }
        catch (e) {
            cb(e);
        }
    };
    AsyncNodeStorage.prototype.getAllKeys = function (cb) {
        try {
            var keys_1 = [];
            for (var i = 0; i < this.localStorage.length; i++) {
                keys_1.push(this.localStorage.key(i));
            }
            process.nextTick(function () { return cb(null, keys_1); });
        }
        catch (e) {
            cb(e);
        }
    };
    return AsyncNodeStorage;
}());
exports.AsyncNodeStorage = AsyncNodeStorage;
